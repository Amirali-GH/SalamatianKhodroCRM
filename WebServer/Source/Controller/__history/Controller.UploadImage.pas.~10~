Unit Controller.UploadImage;

Interface

Uses
    System.SysUtils,
    MVCFramework,
    MVCFramework.Commons,
    Service.Interfaces,
    Web.ReqFiles,
    WebModule.SalamtCRM;

Type
    [MVCPath(BASE_API_V1+'/upload')]
    TUploadImageController = Class(TMVCController)
    Public
        [MVCPath('/images')]
        [MVCHTTPMethods([httpPost])]
        Procedure UploadImages(Const [MVCInject] AImageUploadService: IImageUploadService);
    End;

Implementation

Uses
    MVCFramework.Logger;

{ TUploadImageController }

//________________________________________________________________________________________
Procedure TUploadImageController.UploadImages(
    Const AImageUploadService: IImageUploadService);
Var
    LFiles: TWebRequestFiles;
    LUserID: String;
Begin
    // دریافت مجموعه فایل‌ها از درخواست
    LFiles := Context.Request.Files As TWebRequestFiles;

    If (LFiles = Nil) Or (LFiles.Count = 0) Then
    Begin
        Raise EMVCException.Create(HTTP_STATUS.NoContent, 'هیچ فایلی ارسال نشده است');
    End;

    // گرفتن شناسه کاربر (مطابق الگوی پروژه شما)
    LUserID := Context.LoggedUser.CustomData.Items['userid'];

    Try
        If Not AImageUploadService.SaveUploadedImages(LFiles, LUserID) Then
            Raise EMVCException.Create(HTTP_STATUS.InternalServerError, 'ذخیره‌سازی تصاویر با مشکل مواجه شد');

        Render(HTTP_STATUS.OK, 'تصاویر با موفقیت ذخیره و تخصیص داده شدند.');
    Except
        On E: EMVCException Do
            Raise;
        On E: Exception Do
            Raise EMVCException.CreateFmt(HTTP_STATUS.InternalServerError,
              'خطا در پردازش تصاویر: %s', [E.Message]);
    End;
End;
//________________________________________________________________________________________

End.

