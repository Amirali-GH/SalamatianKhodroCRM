Unit Controller.Upload;

Interface

Uses
    System.JSON,
    MVCFramework,
    MVCFramework.Commons,
    MVCFramework.SQLGenerators.MSSQL,
    MVCFramework.ActiveRecord,
    MVCFramework.Nullables,
    FireDAC.Phys.MSSQL,
    System.Variants,
    System.Generics.Collections,
    Model.User,
    IdHash,
    Service.Interfaces,
    WebModule.SalamtCRM, Model.ResultCustomerContact,
  Service.Lead.FileResultContactCustomer;

Type
    [MVCPath(BASE_API_V1 + '/upload')]
    TUploadFileController = class(TMVCController)
    Public
        [MVCPath('/salesconsultant/sheet')]
        [MVCHTTPMethods([httpPost])]
        [MVCConsumes(TMVCMediaType.APPLICATION_JSON)]
        Procedure GetResultContactCustomer(
          Const [MVCInject] AUploadFileService: IUploadFileService;
          Const [MVCInject] AFileResultService: IFileResultContactCustomerService;
          Const [MVCFromBody] ALeadPlatformRaw: TObjectList<TLeadPlatformRaw>);
End;

Implementation

Uses
    Web.ReqFiles,
    System.SysUtils,
    System.Classes,
    MVCFramework.Logger,
    Model.Lead.FileResultContactCustomer;

{ TUserController }
//________________________________________________________________________________________
Procedure TUploadFileController.GetResultContactCustomer(
    Const AUploadFileService: IUploadFileService;
    Const AFileResultService: IFileResultContactCustomerService;
    Const ALeadPlatformRaw: TObjectList<TLeadPlatformRaw>);
Var
    LFileSize, LUserID, LBranchID, LFileUploadID: String;
    LFileResultHeader: TLead_FileResultContactCustomer;
    LCreatedFileResult: TLead_FileResultContactCustomer;
Begin
    If (Context.Request.Body.IsEmpty) then
        raise EMVCException.Create(HTTP_STATUS.NoContent, 'هیچ فایلی آپلود نشده است')

    Else If (Not Assigned(ALeadPlatformRaw)) then
        raise EMVCException.Create(HTTP_STATUS.NotAcceptable, 'فرمت اکسل وارد شده درست نمی باشد!')

    Else If (ALeadPlatformRaw.IsEmpty) then
        raise EMVCException.Create(HTTP_STATUS.NoContent, 'فایل آپلود شده حاوی هیچ اطلاعاتی نمی باشد!');

    LUserID   := Context.LoggedUser.CustomData.Items['userid'];
    LFileName := Context.Request.QueryStringParam('filename');
    LFileSize := Context.Request.QueryStringParam('filesize');

    If (LFileName.IsEmpty) then
      raise EMVCException.Create(HTTP_STATUS.NoContent, 'نام فایل آپلود شده یافت نشد!')
    Else If (LFileSize.IsEmpty) then
      raise EMVCException.Create(HTTP_STATUS.NoContent, 'محاسبه ی اندازه ی فایل با مشکل مواجه شد!');

    Try
        If Not AUploadFileService.GetSalesConsultantSheet(
            AFileResultService,
            ALeadPlatformRaw,
            LFileUploadID,
            LUserID,
            LFileName,
            LFileSize) then
        begin
          raise EMVCException.Create(HTTP_STATUS.InternalServerError,
            'ذخیره‌سازی فایل با مشکل مواجه شد');
        end;

        Render(HTTP_STATUS.OK,'فایل با موفقیت ذخیره شد.');

    Except
        ON E: EMVCException do
          raise;

        ON E: Exception do
        Begin
            raise EMVCException.CreateFmt(HTTP_STATUS.InternalServerError,
              'خطا در پردازش فایل: %s', [E.Message]);
        End;
    End;
End;
//________________________________________________________________________________________

End.
